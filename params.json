{"name":"Jquery-full-screen-overlay","tagline":"Places content in an overlay that covers the entire screen.  Optionally add a fixed position header.","body":"Docs are a work in progress...\r\n\r\n## Options\r\n\r\n`openTrigger: \".full-screen-overlay-open\"`<br />\r\n**openTrigger** *(jQuery selector)*: This should be overriden with a unique selector when you have more than one full screen overlay on the \r\npage.  Otherwise clicking the element with class `.full-screen-overlay-open` will open ALL overlays.\r\n\r\n`closeTrigger: \".full-screen-overlay-close\",` <br/>\r\n**closeTrigger** *(jQuery selector)*: This should be overriden with a unique selector when you have more than one full screen overlay on the \r\npage.  Otherwise clicking the element with class .full-screen-overlay-close will close ALL overlays.  If a custom value is entered here then `closeButtonOmit` should also be set to true.\r\n\r\n`fixedHeader: false`<br />\r\n**fixedHeader** *(boolean)*:  When set to `true` a sticky section will be attached to the top of the overlay using postion fixed. This will mean that only the overlay body will scroll.\r\n  \r\n`headerContent: ''`<br />\r\n**headerContent** *(string)*: Enter a jQuery selector or HTML markup.  Only applicable if fixedHeader is true.\r\n\r\n`bodyContent: ''`<br />\r\n**bodyContent** *(string)*: If left as an empty string then the innerHtml of the element that called .fullScreenOverlay() will be used. Enter a jQuery selector or HTML markup to use HTML markup from elsewhere on the page.\r\n\r\n`closeButtonMarkup: ''`<br />\r\n**closeButtonMarkup** *(string)*: By default this plugin will add a close button using the FontAwesome cross icon.  If you wish to override the markup for the button to add a custom image, for example, then add the markup here.  Alternatively, set closeButtonOmit to true and include your close button in the `headerContent`, `bodyContent` or inside the element which `fullScreenOverlay()` is called on. \r\n\r\n`closeButtonLocation: '.full-screen-overlay-body'`<br />\r\n**closeButtonLocation** *(string)*: Not applicable if closeTrigger is set.  This determines where the plugin will add it's default close button.  Use `.full-screen-overlay-header` to place in the header if using `fixedHeader: true`.  Otherwise leave as `.full-screen-overlay-body' to place in body.\r\n\r\n`closeButtonOmit: 'false'`<br />\r\n**closeButtonOmit** *(boolean)*: When set to `true` the default close button provided by the plugin will be omitted.  Use in conjunction with `closeTrigger` to tell the plugin which element should be used as the close trigger.\r\n\r\n`cssClasses: ''`<br />\r\n**cssClasses** *(string)*: A space separated list of css classes to add to the overlay wrap.\r\n\r\n### Events\r\n\r\nThe following events can be used by setting the relevant option:\r\n\r\n`onBeforeOpen(e, fullScreenOverlayObject)`<br />\r\n`onAfterOpen(e, fullScreenOverlayObject)`<br />\r\n`onBeforeClose(e, fullScreenOverlayObject)`<br />\r\n`onAfterClose(e, fullScreenOverlayObject)`\r\n\r\n**Example:**\r\n```\r\n$('.my-element').fullScreenOverlay({\r\n\tonAfterOpen: function(e, fullScreenOverlayObject) {\r\n\t\t// Move focus into the dialog for accessibility.\r\n\t\t$('.my-focus-element-inside-the-overlay').focus();\r\n\t},\r\n\tonAfterClose: function(e, fullScreenOverlayObject) {\r\n\t\t// Move focus back to the main page for accessibility.\r\n\t\t$('.my-focus-element-on-the-main-page').focus();\r\n\t},\r\n});\r\n```\r\n\r\n## Functions\r\n\r\n`$('.my-element').fullScreenOverlay('open');`\r\nOpen the overlay.  Useful for responsive where you may want to show/hide a mobile nav overlay depending on the browser width.\r\n\r\n`$('.my-element').fullScreenOverlay('close');`\r\nClose the overlay.  Useful for responsive where you may want to show/hide a mobile nav overlay depending on the browser width.\r\n\r\n`$('.my-element').fullScreenOverlay('isOpen');`\r\nReturns true or false depending on whether the overlay is currently open.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}